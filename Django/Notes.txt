### Django Notes:
https://www.youtube.com/watch?v=JxzZxdht-XY


# install Django

pip install django 
pip install django --upgrade

# add extension

Django v1.10.0
Baptiste Darthenay
Beautiful syntax and scoped snippets for perfectionists with deadlines

Python v2022.6.2
Microsoft
IntelliSense (Pylance), Linting, Debugging (multi-threaded, remote), Jupyter Notebooks, code formatting, refactoring, unit tests, ...

# To check

django-admin

# startproject

django-admin startproject <project_name>
ex. django-admin startproject mysite

# change to project dir

cd .\mysite1\

# to run sample code

# manage.py
-> command line utility, help us to interact with django project.

# To run 
python manage.py runserver OR python manage.py runserver 5555 [To change the port number]


# MVT

-> Model View Template

# create app

python manage.py startapp myApp1

# create urls.py for app

`` mysite1\urls.py
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('myApp1.urls'))
]

`` myApp1\urls.py
from django.contrib import admin
from django.urls import path
from myApp1 import views
# from . import views
urlpatterns = [
    path('', views.indexPage, name='indexPage'),
]

`` myApp1\views.py
from django.shortcuts import render, HttpResponse
# Create your views here.
def indexPage(request):
    return HttpResponse('This is indexPage ....')


# create url dispacher

`` myApp1\urls.py
urlpatterns = [
    path('', views.indexPage, name='indexPage'),
    path('about', views.about, name='about'),
    path('services', views.services, name='services'),   
]

`` myApp1\views.py
def indexPage(request):
    return HttpResponse('This is indexPage ....')
def about(request):
    return HttpResponse('This is about ....')
def services(request):
    return HttpResponse('This is services ....')

# create templates and static files
`` mysite1\static
`` mysite1\templates

`` mysite1\settings.py
STATIC_URL = 'static/'
# added manually 
# STATICFILES_DIRS = [
#     BASE_DIR / "static",
#     '/var/www/static/',
# ]
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
    '/var/www/static/',
]

-> you can see file in side static folder : http://127.0.0.1:8000/static/a.txt

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# create .html page
`` templates\index.html

`` mysite1\myApp1\views.py
def indexPage(request):
    # return HttpResponse('This is indexPage ....')
    return render(request, 'index.html')

# send variable value from views.py to index.html page
`` templates\index.html
<h2>Variable value is : {{ variable }}</h2>

`` mysite1\myApp1\views.py
def indexPage(request):
    context = {
        'variable' : 'hello django!!!'
    }
    # return HttpResponse('This is indexPage ....')
    return render(request, 'index.html', context)

# try with bootstrap
-> https://getbootstrap.com/docs/5.2/getting-started/introduction/


# Django default authentication system
python manage.py makemigrations

-> makemigrations : used to check the change inside your database schema

python manage.py migrate

-> migrate : apply the change on database schema

-> makemigrations auto generates migration files containing changes that need to be applied to the database, but doesn't actually change anyhting in your database. migrate will make the actual modifications to your database, based on the migration files.

# create superuser
python manage.py createsuperuser 

-> to create an admin user/pswd to manage admin page (http://127.0.0.1:8000/admin) (id/pswd : kiran/kiran)

# change the admin page header, title, index_title (https://books.agiliq.com/projects/django-admin-cookbook/en/latest/change_text.html)
`` \mysite1\urls.py
admin.site.site_header = "Demo Admin"
admin.site.site_title = "Demo Admin Portal"
admin.site.index_title = "Welcome to Demo Researcher Portal"

# Template inharitance
`` templates\base.html
-> copy all header, footer part to base.html

{% block body %}{% endblock body %}
-> add between header and footer

<title> {% block title %}{% endblock title %} || Demo Page</title>
-> add in title

`` templates\index.html
{% extends 'base.html' %}
{% block title %}Home{% endblock title %}
{% block body %}This is main body{% endblock body %}






https://www.youtube.com/watch?v=bzjQnWJWuVc

https://www.youtube.com/watch?v=Bfgtp62VFeU

https://www.youtube.com/watch?v=h1fKWxs7A2c

https://www.youtube.com/watch?v=QDdLvImfq_g







