datetime, temp,	dew, humidity, windspeed and solarenergy


plt.plot(data['datetime'].iloc[:240], data['temp'].iloc[:240])
plt.xlabel("X-axis")  # add X-axis label
plt.ylabel("Y-axis")  # add Y-axis label
plt.title("temp plot")  # add title
plt.xticks(rotation=70)
plt.show()

plt.plot(data['datetime'].iloc[:48], data['temp'].iloc[:48])
plt.xlabel("X-axis")  # add X-axis label
plt.ylabel("Y-axis")  # add Y-axis label
plt.title("temp plot")  # add title
plt.xticks(rotation=70)
plt.show()


# setting the dimensions of the plot
# fig, ax = plt.subplots(figsize=(40, 5))
# sns.set_theme(rc={'figure.figsize':(10,15)})

# plt.figure(figsize=(5,15))

# fig.savefig('example.png')






# ax = sns.lineplot(data=df.iloc[:100], x="datetime", y="temp", hue="label", palette="Set1") # hue="label" style="label"
# # plt.title('')
# # plt.xlabel('Classifier')
# # plt.ylabel('Accuracy Score')
# ax.tick_params(axis='x', rotation=90)
# plt.show()




#     predictions = model.forecast(steps=len(test_data))
#     mae = mean_absolute_error(test_data, predictions)
#     print(f"{model_type} Model Mean Absolute Error (MAE):", mae)
#     return model, predictions, mae



streamlit run app.py